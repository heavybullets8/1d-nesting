name: Build and Publish Docker Image

on:
  push:
    branches:
      - main           
    tags:
      - '*.*.*'       
  workflow_dispatch: 

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      # 1  Source
      - name: Check out repository
        uses: actions/checkout@v5.0.0

      # 2  Builder + Registry
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3  Image metadata (tags + labels)
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # SemVer tags – only when we’re on a tag ref
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=semver,pattern={{major}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/') }}
            # latest – only for real releases
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/') }}

      # 4  Build (always) | Push (only for tag builds)
      - name: Build and (conditionally) push Docker image
        id: build
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ./docker/Dockerfile
          push: ${{ startsWith(github.ref, 'refs/tags/') }}   # true for tags, false for main commits
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      # 5  Supply build-provenance attestation (only when we actually pushed something)
      - name: Generate artifact attestation
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/attest-build-provenance@v2.4.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
